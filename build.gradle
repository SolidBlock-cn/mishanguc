plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
        // for 0.4.2 and older
        // url uri("https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/")
    }

    // SpoornPacks
//    maven {
//        url "https://jitpack.io"
//        content { includeGroup "com.github.spoorn" }
//    }
//    flatDir { dir "..\\BRRP\\build\\devlibs" }
}


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
//    modImplementation("net.devtech:arrp:0.5.5")
    // I never break backwards compatibility, so just fetching the latest version should be fine
    // modImplementation("net.devtech:arrp:0.+")

    // SpoornPacks，用于生成资源包和数据包
//    modImplementation 'com.github.spoorn:SpoornPacks:4.0-1.18.2'

    modImplementation project(path: ":brrp", configuration: 'namedElements')
    project(':arrp') {
        apply plugin: 'fabric-loom'
        dependencies {
            // To change the versions see the gradle.properties file
            minecraft "com.mojang:minecraft:${project.minecraft_version}"
            mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
            modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        }
    }

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
